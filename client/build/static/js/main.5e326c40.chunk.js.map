{"version":3,"sources":["utils/auth.js","utils/API.js","utils/localStorage.js","pages/SearchBooks.js","pages/SavedBooks.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","getMe","fetch","headers","authorization","saveBook","bookData","method","body","JSON","stringify","deleteBook","bookId","removeBookId","savedBookIds","parse","updatedSavedBookIds","filter","savedBookId","SearchBooks","useState","searchedBooks","setSearchedBooks","searchInput","setSearchInput","setSavedBookIds","useEffect","bookIdArr","length","handleFormSubmit","event","preventDefault","response","ok","Error","json","items","map","book","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","console","error","handleSaveBook","bookToSave","find","Auth","loggedIn","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","SavedBooks","userData","setUserData","userDataLength","Object","keys","getUserData","user","handleDeleteBook","updatedUser","savedBooks","SignupForm","username","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleInputChange","currentTarget","checkValidity","stopPropagation","log","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","Collapse","Nav","logout","Modal","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5e326c40.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\nexport const createUser = (userData) => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\nexport const loginUser = (userData) => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(userData),\n  });\n};\n\n// save book data for a logged in user\nexport const saveBook = (bookData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`,\n    },\n    body: JSON.stringify(bookData),\n  });\n};\n\n// remove saved book data for a logged in user\nexport const deleteBook = (bookId, token) => {\n  return fetch(`/api/users/books/${bookId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`,\n    },\n  });\n};\n\n// make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\nexport const searchGoogleBooks = (query) => {\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};\n","export const getSavedBookIds = () => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : [];\n\n  return savedBookIds;\n};\n\nexport const saveBookIds = (bookIdArr) => {\n  if (bookIdArr.length) {\n    localStorage.setItem('saved_books', JSON.stringify(bookIdArr));\n  } else {\n    localStorage.removeItem('saved_books');\n  }\n};\n\nexport const removeBookId = (bookId) => {\n  const savedBookIds = localStorage.getItem('saved_books')\n    ? JSON.parse(localStorage.getItem('saved_books'))\n    : null;\n\n  if (!savedBookIds) {\n    return false;\n  }\n\n  const updatedSavedBookIds = savedBookIds?.filter((savedBookId) => savedBookId !== bookId);\n  localStorage.setItem('saved_books', JSON.stringify(updatedSavedBookIds));\n\n  return true;\n};\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\n\nimport Auth from '../utils/auth';\nimport { saveBook, searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\n\nimport { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const [userData, setUserData] = useState({});\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n\n        const response = await getMe(token);\n\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getUserData();\n  }, [userDataLength]);\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBook(bookId, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n","import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { createUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst SignupForm = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await createUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor='username'>Username</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your username'\n            name='username'\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default SignupForm;\n","// see SignupForm.js for comments\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { loginUser } from '../utils/API';\nimport Auth from '../utils/auth';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const response = await loginUser(userFormData);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      username: '',\n      email: '',\n      password: '',\n    });\n  };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm';\nimport LoginForm from './LoginForm';\n\nimport Auth from '../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Google Books Search\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link>\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    See Your Books\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport SearchBooks from './pages/SearchBooks';\nimport SavedBooks from './pages/SavedBooks';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n  return (\n    <Router>\n      <>\n        <Navbar />\n        <Routes>\n          <Route \n            path='/' \n            element={<SearchBooks />} \n          />\n          <Route \n            path='/saved' \n            element={<SavedBooks />} \n          />\n          <Route \n            path='*'\n            element={<h1 className='display-2'>Wrong page!</h1>}\n          />\n        </Routes>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}